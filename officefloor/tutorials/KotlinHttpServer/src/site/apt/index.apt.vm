~~~
~~ #%L
~~ KotlinScript Tutorial
~~ %%
~~ Copyright (C) 2005 - 2020 Daniel Sagenschneider
~~ %%
~~ This program is free software: you can redistribute it and/or modify
~~ it under the terms of the GNU Affero General Public License as published by
~~ the Free Software Foundation, either version 3 of the License, or
~~ (at your option) any later version.
~~ 
~~ This program is distributed in the hope that it will be useful,
~~ but WITHOUT ANY WARRANTY; without even the implied warranty of
~~ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
~~ GNU General Public License for more details.
~~ 
~~ You should have received a copy of the GNU Affero General Public License
~~ along with this program.  If not, see <http://www.gnu.org/licenses/>.
~~ #L%
~~~

                                               -----------------------
                                               Kotlin Polyglot Tutorial 
                                               -----------------------
					                            Daniel Sagenschneider
                                               -----------------------

Kotlin Polyglot Tutorial

  This tutorial demonstrates using Kotlin within WoOF.
  
  While the tutorial is simple, it is entirely written in Kotlin.
  
  As Kotlin compiles to classes, much of the existing features of WoOF can be used as is.  Furthermore, as this tutorial also demonstrates, Kotlin functions can be used.

  {{{https://github.com/officefloor/OfficeFloor/tree/master/officefloor/tutorials/KotlinHttpServer}Tutorial Source}}



*Enable Kotlin

  To enable using Kotlin, add the following to your <<<pom.xml>>>:
  
%{snippet|id=tutorial|file=${basedir}/pom.xml|ignoreDownloadError=false}



*Kotlin

  The Kotlin to service the request is:
  
%{snippet|file=${basedir}/src/main/kotlin/net/officefloor/tutorial/kotlinhttpserver/KotlinLogic.kt|ignoreDownloadError=false}



*Kotlin Data Objects

  As part of supporting Kotlin, the necessary Jackson support is included to enable sending/receiving Kotlin data classes as JSON.
  
  The request / response data classes are as follows:
  
%{snippet|id=tutorial|file=${basedir}/src/main/kotlin/net/officefloor/tutorial/kotlinhttpserver/KotlinRequest.kt|ignoreDownloadError=false}
 
%{snippet|id=tutorial|file=${basedir}/src/main/kotlin/net/officefloor/tutorial/kotlinhttpserver/KotlinResponse.kt|ignoreDownloadError=false}



*Testing

  As Kotlin is integrated well with Java, the following demonstrates writing tests with Kotlin:
  
%{snippet|id=tutorial|file=${basedir}/src/test/kotlin/net/officefloor/tutorial/kotlinhttpserver/KotlinHttpServerTest.kt|ignoreDownloadError=false}

  JUnit 4 example:

%{snippet|id=tutorial|file=${basedir}/src/test/kotlin/net/officefloor/tutorial/kotlinhttpserver/KotlinHttpServerJUnit4Test.kt|ignoreDownloadError=false}



Next

  The {{{../ScalaHttpServer/index.html}next tutorial}} covers Scala.
