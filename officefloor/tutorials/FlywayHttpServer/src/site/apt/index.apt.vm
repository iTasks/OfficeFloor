~~~
~~ #%L
~~ Flyway Tutorial
~~ %%
~~ Copyright (C) 2005 - 2020 Daniel Sagenschneider
~~ %%
~~ This program is free software: you can redistribute it and/or modify
~~ it under the terms of the GNU Affero General Public License as published by
~~ the Free Software Foundation, either version 3 of the License, or
~~ (at your option) any later version.
~~ 
~~ This program is distributed in the hope that it will be useful,
~~ but WITHOUT ANY WARRANTY; without even the implied warranty of
~~ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
~~ GNU General Public License for more details.
~~ 
~~ You should have received a copy of the GNU Affero General Public License
~~ along with this program.  If not, see <http://www.gnu.org/licenses/>.
~~ #L%
~~~

                                               -----------------------
                                                   Flyway Tutorial 
                                               -----------------------
					                            Daniel Sagenschneider
                                               -----------------------

Flyway Tutorial

  This tutorial demonstrates initialising the database with {{{https://flywaydb.org/}Flyway}}.
  
  The following migration script is used to set up the database:
  
%{snippet|id=tutorial|file=${basedir}/src/main/resources/db/migration/V1__Migrate.sql|ignoreDownloadError=false}

  With the following end point retrieving data from the setup database:
  
%{snippet|id=tutorial|file=${basedir}/src/main/java/net/officefloor/tutorial/flywayhttpserver/FlywayLogic.java|ignoreDownloadError=false}

  {{{https://github.com/officefloor/OfficeFloor/tree/master/officefloor/tutorials/FlywayHttpServer}Tutorial Source}}



*Flyway migration

  To have Flyway migrate the database on start up, add the following dependency:
  
%{snippet|id=tutorial|file=${basedir}/pom.xml|ignoreDownloadError=false}

  Ensuring there is a <<<DataSource>>> configured, e.g.:
  
%{snippet|id=tutorial|file=${basedir}/src/main/resources/application.objects|ignoreDownloadError=false}
  
  That's it.  On startup, OfficeFloor will load Flyway and migrate the <<<DataSource>>>'s database.



*Testing

  {{{https://www.h2database.com/}H2}} in memory instances can be used to mock databases for testing.  To ease resetting the database between tests the following dependency can be added:
  
%{snippet|id=reset|file=${basedir}/pom.xml|ignoreDownloadError=false}
  
  This will allowing injecting the following dependency that uses Flyway to reset the database between tests:
  
%{snippet|id=reset|file=${basedir}/src/test/java/net/officefloor/tutorial/flywayhttpserver/FlywayHttpServerTest.java|ignoreDownloadError=false}
  
  The following test then retrieves the setup data:
  
%{snippet|id=tutorial|file=${basedir}/src/test/java/net/officefloor/tutorial/flywayhttpserver/FlywayHttpServerTest.java|ignoreDownloadError=false}


Next

  The {{{../ReactorHttpServer/index.html}next tutorial}} covers using Reactive logic.
